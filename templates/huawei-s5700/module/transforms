entPhysicalIsFRUTxt	                   : SWITCH : {entPhysicalIsFRU}      1=True,2=False
cefcModuleAdminStatusTxt                   : SWITCH : {cefcModuleAdminStatus} 1=Enable,2=Disable,3=Reset,4=Out of service admin
cefcModuleOperStatusTxt                    : SWITCH : {cefcModuleOperStatus}  1=Unknown,2=Ok,3=Disabled,4=Ok but diag failed,5=Boot,6=Self test,7=Failed,8=Missing,9=Mismatch with parent,10=Mismatch config,11=Diag failed,12=Dormant,13=Out of service admin,14=Out of service env temp,15=Powered down,16=Powered up,17=Power denied,18=Power cycled,19=Ok but power over warning,20=Ok but power over critical,21=Sync in progress,22=Upgrading,23=Ok but auth failed
cefcModuleResetReasonTxt                   : SWITCH : {cefcModuleResetReason} 1=Unknown,2=Power up,3=Parity error,4=Clear config reset,5=Manual reset,6=Watch dog timeout reset,7=Resource overflow reset,8=Missing task reset,9=Low voltage reset,10=Controller reset,11=System reset,12=Switchover reset,13=Upgrade reset,14=Downgrade reset,15=Cache error reset,16=Device driver reset,17=Software exception reset,18=Restore config reset,19=Abort rev reset,20=Burn boot reset,21=Standby cd healthier reset,22=Non native config clear reset,23=Memory protection error reset
entPhysicalClassTxt                        : SWITCH : {entPhysicalClass} 1=Other,2=Unknown,3=Chassis,4=Backplane,5=Container,6=Power Supply,7=Fan,8=Sensor,9=Module,10=port,11=stack,12=Cpu
cefcModuleAdminOperReset                   : REGSUB : {cefcModuleAdminStatusTxt}  /^(.+)$/$1 \/ {cefcModuleOperStatusTxt} \/ {cefcModuleResetReasonTxt}/

entPhysicalIndex                           : INDEX  :  {entPhysicalParentRelPos}
entRelPosAndIndex                          : EVAL   :  {entPhysicalParentRelPos} . "(" . (sprintf "%8s", eval({entPhysicalIndex})) . ")"
#entRelPosAndIndex                          : REGSUB :  {entPhysicalParentRelPos} /^(.+)$/$1 ( sprintf("%4s", {entPhysicalIndex}) )/           ### Need maybe the e flag!

entRelPosAndIndexCollec                    : COLTRE : {entPhysicalContainedIn} {entRelPosAndIndex} : . , l( )
entRelPosCollec                            : EVAL   : {entRelPosAndIndexCollec} =~ s/\(\s*\w*\)//rg
entRelPosCollecOrder                       : REGSUB : {entRelPosAndIndexCollec} /^(.+)$/$1.                          {entPhysicalClassTxt}/
moduleSortedIndex                          : SORT   : {entRelPosCollecOrder}

modulePath                                 : REGSUB : {entRelPosCollec} /^\.-1\s*(|.+)$/$1./
modulePathSorted                           : CHAIN  : {moduleSortedIndex} {modulePath}

entPhysicalDescrSorted                     : CHAIN  : {moduleSortedIndex} {entPhysicalDescr}
entPhysicalClassSorted                     : CHAIN  : {moduleSortedIndex} {entPhysicalClassTxt}
entPhysicalHardwareRevSorted               : CHAIN  : {moduleSortedIndex} {entPhysicalHardwareRev}
entPhysicalFirmwareRevSorted               : CHAIN  : {moduleSortedIndex} {entPhysicalFirmwareRev}
entPhysicalSoftwareRevSorted               : CHAIN  : {moduleSortedIndex} {entPhysicalSoftwareRev}
entPhysicalSerialNumSorted                 : CHAIN  : {moduleSortedIndex} {entPhysicalSerialNum}
entPhysicalModelNameSorted                 : CHAIN  : {moduleSortedIndex} {entPhysicalModelName}
entPhysicalIsFRUSorted                     : CHAIN  : {moduleSortedIndex} {entPhysicalIsFRUTxt}

moduleState                                : CHAIN  : {moduleSortedIndex} {cefcModuleAdminOperReset}

moduleStateMon                             : REGSUB  : {moduleState} /^.+$/*/
moduleSortedIndexMon                       : REGSUB  : {moduleSortedIndex}  /^(.+)$/$1{moduleStateMon}/

